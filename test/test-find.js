const find = require("../lib/find");
const expect = require("chai").expect;

const data = {
  "三軒茶屋二丁目": {
    "code": "131120039002",
    "tail": ""
  },
  "三軒茶屋2": {
    "code": "131120039002",
    "tail": ""
  },
  "三軒茶屋2-1-10": {
    "code": "131120039002",
    "tail": "1-10"
  },
  "三軒茶屋 2-1-10": {
    "code": "131120039002",
    "tail": "1-10"
  },
  "三軒茶屋２丁目": {
    "code": "131120039002",
    "tail": ""
  },
  "東京都世田谷区三軒茶屋2": {
    "code": "131120039002",
    "tail": ""
  },
  "世田谷区三軒茶屋2": {
    "code": "131120039002",
    "tail": ""
  },
  "兵庫県丹波篠山市北新町41": {
    "code": "282210127000",
    "tail": "41"
  },
  "兵庫県丹波篠山市北新町": {
    "code": "282210127000",
    "tail": ""
  },
  "丹波篠山市北新町": {
    "code": "282210127000",
    "tail": ""
  },
  // 旧市名
  "兵庫県篠山市北新町": {
    "code": "282210127000",
    "tail": ""
  },
  "篠山市北新町": {
    "code": "282210127000",
    "tail": ""
  },
  // 町名「一丁目」
  "静岡県下田市一丁目": {
    "code": "222190003001",
    "tail": ""
  },
  "東京都": {
    "code": "13000",
    "tail": ""
  },
  "世田谷区": {
    "code": "13112",
    "tail": ""
  },
  "東京都世田谷区": {
    "code": "13112",
    "tail": ""
  },
  "茅ヶ崎市": {
    "code": "14207",
    "tail": ""
  },
  "茅ケ崎市": {
    "code": "14207",
    "tail": ""
  },
  "埼玉県さいたま市": {
    "code": "11100",
    "tail": ""
  },
  "さいたま市": {
    "code": "11100",
    "tail": ""
  },
  "浦和市": {
    "code": "11204",
    "tail": ""
  },
  "北海道 札幌市中央区 北五条西６丁目１－２３北海道通信ビル５Ｆ": {
    "code": "011010024006",
    "tail": "１－２３北海道通信ビル５Ｆ"
  },
  "北海道 様似郡様似町 大通３丁目２６番地": {
    "code": "016080012003",
    "tail": "２６番地"
  },
  "様似郡様似町 大通３丁目２６番地": {
    "code": "016080012003",
    "tail": "２６番地"
  },
  "アメリカ合衆国": null,
  "東京都世田谷区三軒茶屋四丁目": {
    "code": "131120039",
    "tail": "",
    "expectedChome": 2,
    "actualChome": 4
  },
  "東京都世田谷区三軒茶屋": {
    "code": "131120039",
    "tail": "",
    "expectedChome": 2,
    "actualChome": null
  },
  "府中市": {
    "multipleChoice": true
  }
};

describe("imi-enrichment-address#find", function() {
  Object.keys(data).forEach(label => {
    const code = data[label];
    it(label, () => {
      expect(find(label)).deep.equal(code);
    });
  });
});
